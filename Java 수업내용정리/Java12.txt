1. 자바 스트림기반의 IO 입출력개요


출발지    input     프로그램      output     도착지
파일        ->                             ->        파일
키보드     -> (도착지)   (출발지)   ->        콘솔
네트워크  ->                             ->        네트워크


자바에는 기본적인 데이터입출력 API인 java.io 패키지가 존재함
ex) File, Console, InputStream, OutputStream, Reader, Writer

스트림은 단일방향으로 흘러가므로 한번에 입력과 출력을 모두 할 수 없음
(input과 output 양쪽 모두 입력스트림과 출력스트림이 따로 필요)

프로그램이 데이터를 입력받음 ex) 입력스트림(InputStream)
프로그램이 데이터를 보냄 ex) 출력스트림(OutStream)


            InputStream(A)                                  OutputSteam(A)                          <-byte  char->           Reader(A)                     Writer(A)   
FileInputStream   BufferedInputStream     FileOutputStream   BufferedOutputStream                       FileReader     BufferedReader
  (기반스트림)       (보조스트림)            (기반스트림)          (보조스트림)                                        (기반스트림)    (보조스트림)


기반스트림 : 프로그램 밖에서 실제로 스트림을 받아오는 객체(파일, 키보드, 네트워크 어디서든 프로그램 밖의 데이터를 받아옴)
보조스트림 : 기반스트림이 읽어온 데이터를 활용


2. byte스트림 - InputStream과 OutputStream

1) InputStream
바이트기반 입력스트림의 최상위 클래스로 추상클래스
모든 바이트 기반 입력 스트림은 이 클래스를 상속
ex) FileInputStream, BufferedInputStream 클래스 등등
(키보드는 System 클래스인 변수 in을 통해서 입력이 일어나는데 자바에 내장된 객체임 InputStream의 상속을 받는다)

2) OutputStream
바이트기반 출력스트림의 최상위 클래스로 추상클래스
모든 바이트 기반 출력 스트림은 이 클래스를 상속
ex) FileOutputStream, PrintStream, BufferedOutputStream 클래스 등등
(System.out은 PrintStream의 상속을 받아 쉽게 출력을 할수있도록 도와준다)



3. 보조스트림
보조스트림은 자료입출력을 직접 할 수 없다.
즉, 기반스트림이 읽어온 데이터를 활용하기때문에 기반스트림을 생성자의 매개변수로 갖는다.
(오버라이드의 상속개념이 아님, IO의 종류가 너무 많아서 오버라이드를 하기에는 한계가있음. 그래서 런타임때 확장이일어나도록함)